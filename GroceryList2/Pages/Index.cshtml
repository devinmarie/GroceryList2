@page
@model IndexModel
@{
    ViewData["Title"] = "Lally Shopping List";
}

@if (Model.IsMobile)
{
    <h1>Grocery Shopping List App</h1>
}
else
{
    <h1>Grocery Shopping List</h1>

}
<div id="shoppingForm">
    <hr />
    <form id="createShoppingListForm" class="form">
        <h3>Add to the List</h3>
        <div class="form-group">
            <label for="productName">Product Name</label>
            <input type="text" class="form-control" id="productName" placeholder="Name of Grocery Item" />
        </div>
        <div class="form-group">
            <label for="productQty">Product Qty</label>
            <input type="text" class="form-control" id="productQty" placeholder="Qty of Grocery Item" />
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>
<hr />
<h3>Grocery Items Needed</h3>
<ul id="glist">
</ul>
<hr />
<h3>Grocery Items Purchased</h3>
<ul id="gpurchase">
</ul>
<hr />
@if (Model.IsMobile)
{
    <h3>Capture Grocery Store Address</h3>
    <p>Select the button below while shopping to capture the address of the grocery store you are in.</p>

    <div id="geoArea">
        <button id="geoClick">Click for Address</button>
        <h5 style="padding-top: 10px;" id="geoDetails">

        </h5>
    </div>
}
else
{
    <h3>Capture Grocery Store Address</h3>
    <p>While shopping in store, you will be able to capture the grocery store address on your mobile device.</p>
}



@section Scripts {
    <script>

        $(function () {
            loadData();
            $("#createShoppingListForm").submit(function () {
                createShoppingList();
                return false;
            });
        });

        function loadData() {
            $.ajax({
                url: "/api/shoppinglists",
                dataType: 'json',
                contentType: 'application/json',
                method: 'GET'
            }).done(function (responseJSON, status, xhr) {
                buildShoppingList(responseJSON);
                buildPurchaseList(responseJSON);
                $("#glist").on('click', 'a.shoppinglist-delete', function () {
                    var id = $(this).parents("li").attr('shoppinglist-id');
                    {
                        deleteShoppingList(id);
                    }
                    return false;
                });
                $("#gpurchase").on('click', 'a.purchaselist-delete', function () {
                    var id = $(this).parents("li").attr('shoppinglist-id');
                    {
                        deleteShoppingList(id);
                    }
                    return false;
                });
                $("#gpurchase").on('click', 'a.purchaselist-undo', function () {
                    var id = $(this).parents("li").attr('shoppinglist-id');
                    {
                        undoPurchaseShoppingList(id);
                    }
                    return false;
                });
                $("#glist").on('click', 'a.shoppinglist-purchase', function () {
                    $(this).parents("li").find('.purchase-form').show();
                    return false;
                });
                $("#glist").on('click', 'button.purchase-cancel', function () {
                    $(this).parents("li").find('.purchase-form').hide();
                    return false;
                });

                $("#glist").on('click', 'button.purchase-save', function () {
                    var id = $(this).parents("li").attr('shoppinglist-id');
                    var name = $(this).parents("li").find('.purchase-form .purchase-name').val();
                    purchaseShoppingList(id, name, function () {
                        $(this).parents("li").find('.purchase-form').hide();
                    });
                    return false;
                });
                $("#geoClick").click(function () {
                    navigator.geolocation.getCurrentPosition(function (location) {
                        var geocoder = new google.maps.Geocoder();
                        var latLng = new google.maps.LatLng(
                            location.coords.latitude,
                            location.coords.longitude
                        );
                        geocoder.geocode(
                            {
                                latLng: latLng,
                            },
                            function (results, status) {
                                for (var i = 0; i < results[0].address_components.length; i++) {
                                    var address = results[0].address_components[i];
                                    if (address.types[0] == "postal_code") {
                                        $("#geoDetails").html(address.long_name);
                                        $("#geoDetails").html(results[0].formatted_address);
                                    }
                                }
                            }
                        );
                    })
                    return false;
                });
            }).fail(function (xhr, status, error) {
                alert("There was an error retrieving the data");
            });
        }

        function buildShoppingList(shoppinglists) {
            $("#glist").empty();
            $.each(shoppinglists, function (index, item) {
                if (item.buyer == null) {
                    var li = $('<li shoppinglist-id="' + item.shoppingListId + '"></li>');
                    $(li).text(item.productName + ' - ' + item.productQty);

                    $(li).append('<span class="pull-right">&nbsp;|&nbsp;</span>');
                    $(li).append('<a href="#" class="pull-right shoppinglist-purchase"> Purchase</a>');
                    $(li).append('<span class="pull-right">&nbsp;|&nbsp;</span>');
                    $(li).append(' <a href="#" class="pull-right shoppinglist-delete"> Delete</a>')

                    var purchaseForm = $('<div style="display: none;" class="row purchase-form"></div>');
                    var purchaseInput = $('<div class="col-sm-8"><input type="text" class="form-control purchase-name" placeholder="Who purchased the Item?" /></div>');
                    var purchaseButton = $('<div class="col-sm-4"><button class="btn btn-primary purchase-save">Confirm Purchase</button> <button class="btn btn-default purchase-cancel">Cancel Purchase</button></div>');

                    $(purchaseForm).append(purchaseInput);
                    $(purchaseForm).append(purchaseButton);
                    $(li).append(purchaseForm);

                    $("#glist").append(li);
                }
            });
        }

        function buildPurchaseList(shoppinglists) {
            $("#gpurchase").empty();
            $.each(shoppinglists, function (index, item) {
                if (item.buyer != null) {
                    var li = $('<li shoppinglist-id="' + item.shoppingListId + '"></li>');
                    var dateshort = String(item.datePurchased).substring(0, 10);
                    $(li).text(item.productName + ' - ' + item.productQty + ' --> Purchased By  ' + item.buyer + ' on ' + dateshort);
                    $(li).css('color', 'green');

                    $(li).append('<span class="pull-right">&nbsp;|&nbsp;</span>');
                    $(li).append('<a href="#" class="pull-right purchaselist-undo"> Add to List</a>');
                    $(li).append('<span class="pull-right">&nbsp;|&nbsp;</span>');
                    $(li).append(' <a href="#" class="pull-right purchaselist-delete"> Delete</a>')


                    $("#gpurchase").append(li);
                }
            });
        }

        function purchaseShoppingList(id, name, callback) {
            var requestData = {
                name: name
            };
            $.ajax({
                url: '/api/shoppinglists/purchase/' + id,
                dataType: 'json',
                contentType: 'application/json',
                method: 'PUT',
                data: JSON.stringify(requestData)
            }).done(function (responseData, status, xhr) {
                loadData();
                if (callback) {
                    callback();
                }
                location.reload(true);
            }).fail(function (xhr, status, error) {
                alert("There was an error saving your purchased item");
            });
        }


        function undoPurchaseShoppingList(id) {
            $.ajax({
                url: '/api/shoppinglists/purchase/' + id,
                dataType: 'json',
                contentType: 'application/json',
                method: 'DELETE'
            }).done(function (responseData, status, xhr) {
                loadData();
                location.reload(true);
            }).fail(function (xhr, status, error) {
                alert("There was an error adding this item to the list");
            });
        }

        function deleteShoppingList(id) {
            $.ajax({
                url: '/api/shoppinglists/' + id,
                dataType: 'json',
                contentType: 'application/json',
                method: 'DELETE',
            }).done(function (responseData, status, xhr) {
                loadData();
                location.reload(true);
            }).fail(function (xhr, status, error) {
                alert("There was an error deleting the item");
            });
        }

        function createShoppingList() {
            var requestData = {
                productName: $("#productName").val(),
                productQty: $("#productQty").val()
            };
            $.ajax({
                url: '/api/shoppinglists',
                dataType: 'json',
                contentType: 'application/json',
                method: 'POST',
                data: JSON.stringify(requestData)
            }).done(function (responseData, status, xhr) {
                loadData();
                $("#productName").val("");
                $("#productQty").val("");
                location.reload(true);
            }).fail(function (xhr, status, error) {
                alert("There was an error saving your shopping list item");
            });
        }
    </script>
}